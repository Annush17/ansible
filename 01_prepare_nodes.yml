---
- name: Define cluster hosts
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Define master node
      add_host:
        name: k8s-master-01
        ansible_host: 192.168.0.109
        ansible_ssh_user: k8s-master-01
        ansible_ssh_pass: "0000"
        ansible_become: yes
        ansible_become_pass: "0000"

    - name: Define worker-01 node
      add_host:
        name: k8s-worker-01
        ansible_host: 192.168.0.106
        ansible_ssh_user: k8s-worker-01
        ansible_ssh_pass: "0000"
        ansible_become: yes
        ansible_become_pass: "0000"

    - name: Define worker-02 node
      add_host:
        name: k8s-worker-02
        ansible_host: 192.168.0.110
        ansible_ssh_user: k8s-worker-02
        ansible_ssh_pass: "0000"
        ansible_become: yes
        ansible_become_pass: "0000"

    - name: Define worker-03 node
      add_host:
        name: k8s-worker-03
        ansible_host: 192.168.0.111
        ansible_ssh_user: k8s-worker-03
        ansible_ssh_pass: "0000"
        ansible_become: yes
        ansible_become_pass: "0000"

- name: Prepare all Kubernetes nodes
  hosts:
    - k8s-master-01
    - k8s-worker-01
    - k8s-worker-02
    - k8s-worker-03
  become: yes
  vars:
    k8s_version: "1.28.5"
  tasks:
    - name: Disable swap
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.shell: |
          swapoff -a
          sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
    - name: Load kernel modules
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF
        modprobe overlay
        modprobe br_netfilter
    - name: Configure sysctl params
      become: yes
      become_user: root
      become_method: sudo
      shell: |
        cat <<EOF | tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF
        sysctl --system

    - name: Install required packages
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
      
    - name: Add Docker GPG key
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository (bookworm)
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bookworm stable"
        state: present
        
    - name: Install containerd
      become: yes
      become_user: root
      become_method: sudo
      package:
        name: containerd.io
        state: present
    - name: Configure containerd
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.copy:
        content: |
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          runtime_type = "io.containerd.runc.v2"
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
          SystemdCgroup = true
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: 0644
        
    - name: Restart and enable containerd
      become: yes
      become_user: root
      become_method: sudo
      systemd:
        name: containerd
        state: restarted
        enabled: yes
    - name: Add Kubernetes GPG key
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        chmod a+r /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes apt repository (Debian 12)
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present
        
    - name: Install kubeadm, kubelet, kubectl
      become: yes
      become_user: root
      become_method: sudo
      package:
        name:
          - kubelet={{ k8s_version }}-00
          - kubeadm={{ k8s_version }}-00
          - kubectl={{ k8s_version }}-00
        state: present
        allow_downgrade: yes
    - name: Hold Kubernetes packages to prevent auto-update
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.shell: |
        apt-mark hold kubelet kubeadm kubectl
    - name: Start and enable kubelet
      become: yes
      become_user: root
      become_method: sudo
      systemd:
        name: kubelet
        state: started
        enabled: yes
